import streamlit as st
import pandas as pd
import altair as alt
import altair_viewer
import plotly_express as px
import codecs

pd.set_option('display.max_columns', None)
pd.set_option('display.width', None)


def sales():
    st.write('### –û—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º')
    style_h1_sales = codecs.open('/app/danzak.github.io/css/style_h1_sales.css').read()
    st.markdown(f'<style>{style_h1_sales}</style>', unsafe_allow_html=True)

    dataset = pd.DataFrame(pd.read_excel('–î–∞—Ç–∞—Å–µ—Ç.xlsx', sheet_name=0))
    # –î–æ–±–∞–≤–∏–ª —Å—Ç–æ–ª–±–µ—Ü, –º–µ—Å—è—Ü + –≥–æ–¥
    # dataset['–ú–µ—Å—è—Ü_–≥–æ–¥'] = dataset['–î–µ–Ω—å'].dt.strftime('%Y, %B')
    dataset['–ú–µ—Å—è—Ü_–≥–æ–¥'] = dataset["–î–µ–Ω—å"].dt.to_period("M")

    years_filter = st.sidebar.multiselect(
        '–ì–û–î',
        dataset['–ì–æ–¥'].unique(),
        dataset['–ì–æ–¥'].unique())
    manager_filter = st.sidebar.multiselect(
        '–ú–ï–ù–ï–î–ñ–ï–†',
        dataset['–ú–µ–Ω–µ–¥–∂–µ—Ä'].unique(),
        dataset['–ú–µ–Ω–µ–¥–∂–µ—Ä'].unique())
    customer_filter = st.sidebar.multiselect(
        '–ó–ê–ö–ê–ó–ß–ò–ö',
        dataset['–ó–∞–∫–∞–∑—á–∏–∫'].unique(),
        dataset['–ó–∞–∫–∞–∑—á–∏–∫'].unique())
    vegetables_filter = st.sidebar.multiselect(
        '–ù–ê–ò–ú–ï–ù–û–í–ê–ù–ò–ï',
        dataset['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ'].unique(),
        dataset['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ'].unique())
    # print(data.head().to_markdown())

    # with st.sidebar:
    #     st.button('EXIT')

    # –≠–¢–û –°–í–Ø–ó–ö–ê –§–ò–õ–¨–¢–†–û–í –∏ –¢–ê–ë–õ–ò–¶–´ (–î–ê–¢–ê–§–†–ï–ô–ò–ú–ê)
    data_selection = dataset.query(
        '–ì–æ–¥ == @years_filter and –ú–µ–Ω–µ–¥–∂–µ—Ä == @manager_filter and –ó–∞–∫–∞–∑—á–∏–∫ == @customer_filter and –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ == '
        '@vegetables_filter'
    )
    # st.dataframe(data_selection)
    st.markdown('---')

    # ------–û–±—â–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏--------
    col1, col2, col3 = st.columns(3)
    with col1:
        sale_sum = int(data_selection['–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)'].sum() / 1000)
        st.metric(label="–ü—Ä–æ–¥–∞–∂–∏, –º–ª–Ω —Ä—É–±.", value=sale_sum)
    with col2:
        mean_check = int(round(data_selection['–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)'].mean(), 1))
        st.metric(label="–°—Ä–µ–¥–Ω–∏–π —á–µ–∫, —Ä—É–±.", value=mean_check)
    with col3:
        count_sales = int(len(data_selection['–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)']))
        st.metric(label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–∂", value=count_sales)
    st.markdown('---')

    # -----–ì—Ä–∞—Ñ–∏–∫:–î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂, –º–ª–Ω —Ä—É–±.----#
    ss3 = (data_selection.groupby([data_selection["–î–µ–Ω—å"].dt.to_period("M")]).sum()[['–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)']] / 1000).round(
        1)
    fig_prod_sales_grafik = px.line(
        ss3,
        y='–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)',
        x=ss3.index.to_timestamp(),
        text='–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)',
        labels={'–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)': '–ü—Ä–æ–¥–∞–∂–∏ (–º–ª–Ω.—Ä—É–±)'},
        title='–î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂, –º–ª–Ω —Ä—É–±.'
    )

    fig_prod_sales_grafik.update_layout(
        plot_bgcolor='rgba(0,0,0,0)',
        xaxis=dict(showgrid=False),
        yaxis=dict(showgrid=False),
        # title_font_family='Source Sans Pro',
        title_font_size=20,
        height=300
    )
    st.plotly_chart(fig_prod_sales_grafik, use_container_width=True)

    col1, col2 = st.columns(2)
    with col1:
        # ------–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è(–ª–∏–Ω–µ–π—á–∞—Ç–∞—è) –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞: –ü—Ä–æ–¥–∞–∂–∏ –ø–æ —Ç–æ–≤–∞—Ä–∞–º, –º–ª–Ω —Ä—É–±.------#
        sss = (data_selection.groupby("–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ")[["–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)"]].sum() / 1000).round(1).sort_values(
            '–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)')
        fig_prod_sales = px.bar(
            sss,
            x='–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)',
            y=sss.index,
            orientation='h',
            template='plotly_dark',
            text_auto=True,
            title='–ü—Ä–æ–¥–∞–∂–∏ –ø–æ —Ç–æ–≤–∞—Ä–∞–º, –º–ª–Ω.—Ä—É–±',
            # height=700,
            color='–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)',
            labels={'–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)': '–ü—Ä–æ–¥–∞–∂–∏ (–º–ª–Ω.—Ä—É–±)'}
        )

        fig_prod_sales.update_layout(
            plot_bgcolor='rgba(0,0,0,0)',
            xaxis=dict(showgrid=False),
            yaxis=dict(showgrid=False),
            # title_font_family='Source Sans Pro',
            title_font_size=20
        )
        st.plotly_chart(fig_prod_sales, use_container_width=True)

    with col2:
        # ------–ö–æ–ª—å—Ü–µ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞: –ü—Ä–æ–¥–∞–∂–∏ –ø–æ –≥–æ—Ä–æ–¥–∞–º------#
        sdsd = data_selection.groupby(["–°–∫–ª–∞–¥"]).sum()[['–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)']] / 1000
        fig_prod_sales_okr = px.pie(
            sdsd,
            values='–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)',
            names=sdsd.index,
            title='–ü—Ä–æ–¥–∞–∂–∏ –ø–æ –≥–æ—Ä–æ–¥–∞–º',
            opacity=0.9,
            hole=0.5,
            labels={'–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)': '–ü—Ä–æ–¥–∞–∂–∏ (–º–ª–Ω.—Ä—É–±)'}
        )

        fig_prod_sales_okr.update_layout(
            title_font_size=20
        )
        st.plotly_chart(fig_prod_sales_okr)


if __name__ == '__main__':
    st.set_page_config(
        page_title="SALES",
        page_icon="ü•∞",
        layout="wide",
        initial_sidebar_state="auto"
    )

    hide_menu_style = """
            <style>
            .css-wjbhl0 li:nth-child(2) {display: none;}
            .css-wjbhl0 li:nth-child(3) {display: none;}
            .css-wjbhl0 li:nth-child(4) {display: none;}
            .css-wjbhl0 li:nth-child(1) svg {display: none;}
            
            .css-1ck8f3p {visibility: hidden;}
            </style>
            """
    st.markdown(hide_menu_style, unsafe_allow_html=True)

    sales()

    # hide_menu_style = """
    #         <style>
    #         .css-79elbk  {display: none;}
    #         .css-1ck8f3p {visibility: hidden;}
    #         </style>
    #         """
    # st.markdown(hide_menu_style, unsafe_allow_html=True)

    ### sss2 = (data_selection.groupby(["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", '–°–∫–ª–∞–¥'])[["–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)"]].sum() / 1000).round(1)

    # ------–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞: –ü—Ä–æ–¥–∞–∂–∏ –ø–æ —Ç–æ–≤–∞—Ä–∞–º, –º–ª–Ω —Ä—É–±.------ALTAIR
    # sss4 = (data_selection.groupby("–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ")[["–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å.—Ä—É–±)"]].sum() / 1000).round(1).reset_index()
    # s = alt.Chart(sss4).mark_bar().encode(
    #     x=alt.X('–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å\\.—Ä—É–±):Q', title='–ü—Ä–æ–¥–∞–∂–∏ (–º–ª–Ω.—Ä—É–±)', sort='ascending'),
    #     y=alt.Y('–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ:N'),
    #     color=alt.Color('–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å\\.—Ä—É–±):Q', sort='ascending', title='–ü—Ä–æ–¥–∞–∂–∏ (–º–ª–Ω.—Ä—É–±)')
    # )
    # s_text = s.mark_text(
    #     align='left',
    #     baseline='middle',
    #     dx=3
    # ).encode(text=alt.Text('–ü—Ä–æ–¥–∞–∂–∏(—Ç—ã—Å\\.—Ä—É–±):Q'))
    # st.altair_chart(s + s_text.interactive(), use_container_width=True)
